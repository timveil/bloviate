name: Semantic Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
      published: ${{ steps.semantic.outputs.new_release_published }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '16'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '/dev/null'
          
      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/exec
          npm install -g conventional-changelog-conventionalcommits

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "preset": "conventionalcommits",
                  "releaseRules": [
                    {"type": "feat", "release": "minor"},
                    {"type": "fix", "release": "patch"},
                    {"type": "perf", "release": "patch"},
                    {"type": "docs", "release": false},
                    {"type": "style", "release": false},
                    {"type": "refactor", "release": "patch"},
                    {"type": "test", "release": false},
                    {"type": "build", "release": "patch"},
                    {"type": "ci", "release": false},
                    {"type": "chore", "release": false},
                    {"type": "revert", "release": "patch"},
                    {"scope": "no-release", "release": false},
                    {"breaking": true, "release": "major"}
                  ],
                  "parserOpts": {
                    "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"]
                  }
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      {"type": "feat", "section": "✨ Features"},
                      {"type": "fix", "section": "🐛 Bug Fixes"},
                      {"type": "perf", "section": "⚡ Performance Improvements"},
                      {"type": "refactor", "section": "♻️ Code Refactoring"},
                      {"type": "build", "section": "🔧 Build System"},
                      {"type": "revert", "section": "⏪ Reverts"}
                    ]
                  }
                }
              ],
              "@semantic-release/changelog",
              [
                "@semantic-release/exec",
                {
                  "prepareCmd": "mvn versions:set -DnewVersion=${nextRelease.version} -DgenerateBackupPoms=false",
                  "publishCmd": "mvn clean deploy -DskipTests=true"
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": ["pom.xml", "CHANGELOG.md"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ],
              "@semantic-release/github"
            ]
          }
          EOF

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
        
      - name: Log release info
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "🎉 New release published!"
          echo "Version: ${{ steps.semantic.outputs.new_release_version }}"
          echo "Release notes: ${{ steps.semantic.outputs.new_release_notes }}"